@page "/files"
@using System.Text.RegularExpressions
@using System.IO

<InputFile OnChange="@OnInputFileChange"  class="btn btn-primary" />   

<div class="form-group">
    <p>@file?.Name</p>
    <p>@file?.ContentType</p>
    <p>@(file?.Size != null ? file?.Size/1024 + " KBs" : "")</p>
    <p>@file?.LastModified</p>
</div>

@if(csvData.Count() > 0)
{
    <table class="table">
        <thead>
            <tr>
                @foreach (var columnHeader in csvData[0])
                {
                    <th>@columnHeader</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var row in csvData.Skip(1))
            {
                <tr>
                    @foreach (var item in row)
                    {
                        <td>@item</td>
                    }
                </tr>
            }
        </tbody>
    </table>
}

@code
{
    IBrowserFile file;
    List<string[]> csvData = new List<string[]>();  
    public async Task OnInputFileChange(InputFileChangeEventArgs e)  
    {  
        file = e.File;
        Regex regex = new Regex(".+\\.csv", RegexOptions.Compiled);  
        if (regex.IsMatch(file.Name))
        {  
            var stream = file.OpenReadStream(); 
            MemoryStream ms = new MemoryStream();  
            await stream.CopyToAsync(ms);  
            stream.Close();  
            var outputFileString = System.Text.Encoding.UTF8.GetString(ms.ToArray()); 
            ReadAndShowFileInfo(outputFileString);
        }  
    }  

    private string[] SplitCSV(string input)  
    {  
        //Excludes commas within quotes  
        Regex csvSplit = new Regex("(?:^|,)(\"(?:[^\"]+|\"\")*\"|[^,]*)", RegexOptions.Compiled);  
        List<string> list = new List<string>();  
        string curr = null;  
        foreach (Match match in csvSplit.Matches(input))  
        {  
            curr = match.Value;  
            if (0 == curr.Length)  list.Add(""); 
            list.Add(curr.TrimStart(','));  
        }  
    
        return list.ToArray();  
    }  

    private void ReadAndShowFileInfo(string FileData)
    {
        foreach (var item in FileData.Split(Environment.NewLine))  
        {  
            csvData.Add(SplitCSV(item.ToString()));  
        }  
    }
  
}